version: '3.8'
services:
  #
  # underlying database
  #   NOTE: we should use version compatible versions with upstream AWS RDS instances
  #   NOTE: usage of the 'aws rds describe-db-engine-versions --engine postgres' will give these versions.
  #
  db:
    container_name: db
    image: postgres:16.8-bullseye
    pull_policy: always
    restart: always
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USERNAME}"]
      interval: 5s
      retries: 5
      start_period: 10s

  #
  # migrations
  #   NOTE: ensure this is set to not restart
  #   NOTE: we need to sleep for a period of time until the postgres container is ready
  #
  migrations:
    container_name: migrations
    entrypoint:
      - "/bin/goose"
      - "up"
    image: ghcr.io/klearwave/service-info:${SERVICE_VERSION}
    pull_policy: always
    restart: no
    depends_on:
      db:
        condition: service_healthy
    environment:
      GOOSE_DRIVER: postgres
      GOOSE_MIGRATION_DIR: /migrations
      GOOSE_DBSTRING: postgres://${DB_USERNAME}:${DB_PASSWORD}@db:5432/${DB_NAME}
    links:
      - db

  #
  # api
  #
  api:
    container_name: api
    entrypoint:
      - service
    image: ghcr.io/klearwave/service-info:${SERVICE_VERSION}
    pull_policy: always
    restart: always
    depends_on:
      - db
      - migrations
    ports:
      - 8443:8443
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
    links:
      - db
    configs:
      - source: tls_crt
        target: /tls.crt
      - source: tls_key
        target: /tls.key
    # NOTE: we cannot use healthcheck here as we do not have curl.  See https://github.com/klearwave/service-info/issues/4
    # healthcheck:
    #   test: ["CMD", "curl", "-k", "https://localhost:8443/api/v0/docs"]
    #   interval: 10s
    #   retries: 3
    #   start_period: 10s
    #   timeout: 5s
configs:
  tls_crt:
    file: /volume1/docker/projects/klearwave-service-info/tls.crt
  tls_key:
    file: /volume1/docker/projects/klearwave-service-info/tls.key